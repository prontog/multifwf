% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_multi_fwf.R
\name{read_multi_fwf}
\alias{read_multi_fwf}
\title{Read Fixed Width Format Files containing lines of different Type}
\usage{
read_multi_fwf(file, multi.specs, select, skip = 0, n = -1, ...)
}
\arguments{
\item{file}{either a path to a file, a connection, or literal data (either a single string or a raw vector). 

Files ending in .gz, .bz2, .xz, or .zip will be automatically uncompressed. Files starting with http://, https://, ftp://, or ftps:// will be automatically downloaded. Remote gz files can also be automatically downloaded and decompressed.
Literal data is most useful for examples and tests. It must contain at least one new line to be recognised as data (instead of a path) or be a vector of greater than length 1.
Using a value of clipboard() will read from the system clipboard.}

\item{multi.specs}{A named list of data.frames containing the following columns:
    \tabular{ll}{
        widths \tab   see \link{fwf_widths}\cr
        col_names \tab see \link{fwf_widths}\cr
    }

For more info on these fields see \code{\link{read_fwf}}.

Note that each list item should have a name. This is important for the select function.}

\item{select}{A function to select the type of a line. This selector should have parameters:
    \tabular{ll}{
        line \tab   the line\cr
        specs \tab  the multi.specs list that was passed to read.multi.fwf\cr
    }
    
The select function should return the name of the spec that matches the line. read.multi.fwf will then use this name to select the a spec from the passed multi.spec. This is why multi.spec should be a named list. 
If there is no match then NULL can be returned.}

\item{skip}{number of initial lines to skip; see \link{read_fwf}.}

\item{n}{the maximum number of records (lines) to be read, defaulting to no limit.}

\item{...}{further arguments to be passed to \link{read_fwf}.}
}
\value{
Return value is a named list with an item for each spec in multi.spec. If there was at least one line in file, matching a spec, then the named item will be a \link{tibble}. Otherwise it will be NULL.
}
\description{
Read a table of fixed width formatted data of different types into a \link{tibble} for each type.
}
\examples{
ff <- tempfile()
cat(file = ff, '123456', '287654', '198765', sep = '\\n')
specs <- list()
specs[['sp1']] = data.frame(widths = c(1, 2, 3), 
                            col_names = c('Col1', 'Col2', 'Col3'))
specs[['sp2']] = data.frame(widths = c(3, 2, 1), 
                            col_names = c('C1', 'C2', 'C3'))

myselector <- function(line, specs) {
    s <- substr(line, 1, 1)
    spec_name = ''
    if (s == '1')
        spec_name = 'sp1'
    else if (s == '2')
        spec_name = 'sp2'

    spec_name
}

read_multi_fwf(ff, multi.specs = specs, select = myselector)    
#> sp1: 1 23 456 \\ 1 98 765, sp2: 287 65 4

unlink(ff)
}
\seealso{
\code{\link{read_fwf}}
}
\author{
Panos Rontogiannis \email{panos@ronto.net}
}
